#tag ClassProtected Class EDLExporterBNInherits TitleExporterBN	#tag Event		Function ExportEvent() As string		  dim i,j,cf, item, tape as integer		  dim lines(-1), line, result as string		  dim sourcein, recordin, sourceout, recordout, tracks, transition, fn as string		  dim title as onetitle		  dim tc as timecode		  		  lines.append "TITLE: "+ uppercase(left(documentname,16))		  		  tc = getTimeCode		  if tc.speedp = 29.97 then		    if tc.dropframeP then		      lines.append "FCM: DROP FRAME" 		    else		      lines.append "FCM: NON-DROP FRAME" 		    end		  end		  		  for each title in titles		    if title.getinpoint<>"" and title.getoutpoint<>"" then		      item = item + 1		      tracks = "V"		      transition = "C"		      sourcein = title.getinpoint		      sourceout = title.getoutpoint		      recordin = title.getinpoint		      recordout = title.getoutpoint		      fn = title.filenameComplete		      tape = val(fn) mod 200		      		      line = format(item mod 1000,"000")+"  "		      line = line + format(tape,"0000")+"     "		      line = line + left(tracks + "      ",6) 		      line = line + left(transition + "         ", 9)		      line = line + left(sourcein,11) + " " + left(sourceout,11) + " " 		      line = line + left(recordin,11) + " " + left(recordout,11) 		      		      lines.append line		      lines.append  "* FROM CLIP NAME:  "  + fn		      if isastillfilename then		        lines.append  "* FROM CLIP IS "  + fn		      else		        lines.append  "* FROM CLIP IS A STILL" 		      end		    end		  next		  		  result = join(lines, endofLine.windows)		  return result		  		End Function	#tag EndEvent	#tag Event		Function GetDefaultNameEvent() As string		  return documentname + ".edl"		End Function	#tag EndEvent	#tag Event		Function GetLabelEvent() As string		  if isastillfilename then		    return "EDL Premiere"		  else		    return "EDL CMX3600"		  end		End Function	#tag EndEvent	#tag Method, Flags = &h0		Sub Constructor(stillfile as boolean = false)		  isastillfilename = stillfile		End Sub	#tag EndMethod	#tag Note, Name = Dump		  dim i,j,cf as integer		  dim onet as onetitle		  dim titles(-1) as string		  dim lines(-1) as string		  dim result as string		  dim title as string		  dim cedl as cedlevent		  dim tc as timecode		  		  onet = new onetitle(style)		  		  cedl = new cedlevent		  cedl.newline = endofLine.windows		  		  lines.append "TITLE: "+ uppercase(left(edltitle,16)) + cedl.newline		  		  tc = style.getTimeCode		  if tc.speedp = 29.97 then		    if tc.dropframeP then		      lines.append "FCM: DROP FRAME" + cedl.newline		    else		      lines.append "FCM: NON-DROP FRAME" + cedl.newline		    end		  end		  		  cf = titlecount		  		  for i = 1 to cf		    onet = gettitle(i)		    if onet.getinpoint<>"" and onet.getoutpoint<>"" then		      		      cedl.sourcein = onet.getinpoint		      cedl.sourceout = onet.getoutpoint		      cedl.recordin = onet.getinpoint		      cedl.recordout = onet.getoutpoint		      cedl.eventnr = i		      cedl.filename = prefix + onet.getfilename + suffix		      cedl.comment = onet.comment		      cedl.tape = val(onet.getfilename) mod 200		      		      lines.append cedl.dump		    end		  next		  		  result = join(lines, "")		  return result		  			#tag EndNote	#tag Note, Name = MenuHandler		  dim f as folderItem		  dim t as textoutputStream		  dim i as integer		  dim st as string		  dim sd as saveasDialog		  dim suffix as string		  		  sd = new saveasDialog		  sd.Filter = "TEXT"		  sd.ActionButtonCaption = "Export"		  sd.suggestedFileName = title + ".edl"		  if document = nil then		    sd.initialDirectory = documentsFolder		  else		    sd.initialDirectory = document.parent		  end		  //f = sd.showmodalwithin(me)		  f = sd.showmodal		  		  select case left(exportformat,4)		  case "PICT"		    suffix = app.pictextension		  case "TIFF"		    suffix = app.tiffextension		  end		  		  if f<>nil then		    t = f.createtextfile		    if t <>nil then		      app.mouseCursor = system.cursors.wait		      t.write titlelist.dumpEDL(prefix,suffix, title)		      t.close 		      app.mouseCursor = system.cursors.standardpointer		    else		      msgbox "Error Main:FileExportEDL: No TextOutPutStream"		    end		    		  end			#tag EndNote	#tag Property, Flags = &h0		isastillfilename As boolean	#tag EndProperty	#tag ViewBehavior		#tag ViewProperty			Name="documentname"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="TitleExporterBN"		#tag EndViewProperty		#tag ViewProperty			Name="dumpstring"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="TitleExporterBN"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="isastillfilename"			Group="Behavior"			InitialValue="0"			Type="boolean"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="moviename"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="TitleExporterBN"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass