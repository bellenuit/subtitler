#tag ClassProtected Class TMPGEncDVDAuthorExporterBNInherits TitleExporterBN	#tag Event		Function GetDefaultDictEvent() As dictionary		  dim d as new dictionary		  d.value("textencoding") = "UTF-8"		  d.value("lineending") = "Windows"		  return d		End Function	#tag EndEvent	#tag Event		Function GetLabelEvent() As string		  return "TMPGEnc DVD Author 3"		End Function	#tag EndEvent	#tag Event		Sub ImportEvent(s as string)		  dim i,j ,item as integer		  dim sources(-1), source, lines(-1), line, s2, words(-1), word, inp, outp, textline as string		  dim found as boolean		  dim title as onetitle		  		  //		  // [ItemData]		  // 1,1,"00:01:49,040","00:01:51,040",0,"Your age?"		  // 2,1,"00:02:01,440","00:02:04,440",0,"Ever done it with a girl?"		  		  		  s2 = mid(s,instr(s,"[ItemData]") + len("[ItemData]"))		  		  redim titles(-1)		  		  lines = split(replaceLineEndings(s2,endofLine),endofLine)		  for each line in lines		    //words = split(line,",") // komma geht nicht, weil das wird im timecode benutzt		    words = ParseCVSLine(line)		    		    if ubound(words) >=5 then		      inp = converttc(words(2))		      outp =  converttc(words(3))		      item = val(words(0))		      textline = words(5)		      if left(textline,1) = """" and right(textline,1) = """" then		        textline = mid(textline, len(textline)-2)		      end		      title = new oneTitle(style)		      title.setinOut(inp,outp)		      title.setitemfilename item // must be reversed order to get /file on top		      title.addLine trim(textline.defineEncoding(gettextEncoding))		      titles.append title		    end		  next		  		End Sub	#tag EndEvent	#tag Method, Flags = &h0		Function ConvertTC(s as string) As string		  dim result, fields(-1), ms, fr as string		  dim frd as double		  dim tc as timecode		  tc = gettimeCodeimport		  		  		  		  // format is milliseconds "00:01:49,040"		  // first part bevore "," is seconds		  fields = split(s,",")		  		  if ubound(fields)>=1 then		    ms = fields(1)		    frd = val(ms)/1000.0 * tc.GetSpeed		    if frd<0 then frd = 0		    if frd>=tc.GetFps then frd = tc.GetFps-1		    fr = format(frd,"00")		  end		  		  		  result = trim(fields(0) + ":" + fr)		  result = replaceall(result,".","")		  result = replaceall(result,":","")		  result = replaceall(result,";","")		  if tc <> nil then		    tc.setTC val(result)		    result = tc.gettext		  end		  return result		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function ParseCVSLine(s as string) As string()		  // 1,1,"00:01:49,040","00:01:51,040",0,"Your age?"		  		  // in principle comma, but it may be in quotes, then you should not parse the text in the quotes		  		  dim result(-1), character, field as string		  dim quoting as boolean		  dim i as integer		  		  for i = 1 to len(s)		    character = mid(s,i,1)		    select case character		    case ","		      if quoting then		        field = field + character		      else		        result.append field		        field = ""		      end		    case """"		      if quoting then		        quoting = false		      else		        quoting = true		      end		    else		      field = field + character		    end		  next		  result.append field		  return result		  		  		End Function	#tag EndMethod	#tag ViewBehavior		#tag ViewProperty			Name="documentname"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="TitleExporterBN"		#tag EndViewProperty		#tag ViewProperty			Name="dumpstring"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="TitleExporterBN"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="moviename"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="TitleExporterBN"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass