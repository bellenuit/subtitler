#tag ClassProtected Class AvidDSExporterBNInherits TitleExporterBN	#tag Event		Function ExportEvent() As string		  dim item as integer		  dim lines(-1), inp, outp, textlines(-1), t, result, stylestr as string		  dim title as oneTitle		  dim d as date		  		  lines.append "@ This is a DS Subtitles file"		  lines.append "@ Creator: Belle Nuit Subtitler " +app.shortVersion		  d = new date		  lines.append "@ Date: " + d.shortdate		  		  lines.append "" 		  lines.append "@ Header" 		  lines.append "" 		  		  lines.append "<font> " + style.font		  		  if style.bold then		    stylestr =  "Bold"		  end		  if style.italic then		    stylestr = stylestr + " Italic "		  end		  if stylestr <> "" then		    lines.append "<font style> " + trim(stylestr)		  end		  lines.append "<font size> " + str(style.size)		  lines.append "<kerning> " + str(style.spacing)		  lines.append "<leading> " + str(style.leading)		  select case style.halign		  case 0		    lines.append "<alignment> left"		  case 1		    lines.append "<alignment> center"		  case 2		    lines.append "<alignment> right"		  case 3		    lines.append "<alignment> center" // because center left does not exist		  end		  lines.append ""		  '		  if style.textalpha > 0 then		    lines.append "<use face> on"		    lines.append "<face color> " + format(style.textc.red * 100/255,"0")  + " " + format(style.textc.green * 100/255,"0")  + " " + format(style.textc.blue * 100/255,"0")		    lines.append "<face opacity> " + format(style.textalpha*100,"0")		    lines.append "<face softness> " + str(style.textsoft * 20)		    lines.append ""		  else		    lines.append "<use face> off"		  end		  		  if style.borderalpha > 0 then 		    lines.append "<use edge> on"		    lines.append "<edge color> " + format(style.borderc.red * 100/255,"0")  + " " + format(style.borderc.green * 100/255,"0")  + " " + format(style.borderc.blue * 100/255,"0")		    lines.append "<face opacity> " + format(style.borderalpha, "0")		    lines.append "<edge opacity> " + str(style.borderalpha)		    lines.append "<edge softness> " + str(style.bordersoft * 20)		    lines.append "<edge width> "+ str(style.borderwidth)		    lines.append ""		  else		    lines.append "<use edge> off"		  end		  		  if style.shadowalpha > 0 then 		    lines.append "<use shadow> on"		    lines.append "<shadow color> " + format(style.shadowc.red * 100/255,"0")  + " " + format(style.shadowc.green * 100/255,"0")  + " " + format(style.shadowc.blue * 100/255,"0")		    lines.append "<shadow opacity> " + format(style.shadowalpha*100,"0")		    lines.append "<shadow softness> " + str(style.shadowsoft * 20)		    lines.append "<shadow offset> "+ format(pow (style.shadowx  * style.shadowx + style.shadowy * style.shadowy, 0.5) ,"0")		    lines.append "<shadow angle> "+ format( atan2 (style.shadowy, style.shadowx) * 180 / 3.1415,"0") 		    lines.append ""		  else		    lines.append "<use shadow> off"		  end		  		  lines.append "" 		  lines.append "@ Subtitles"		  lines.append "" 		  		  lines.append "<begin subtitles>"		  lines.append ""		  		  for each title in titles		    if title.getinpoint<>"" and title.getoutpoint<>"" then		      inp = title.getinpoint		      outp = title.getoutpoint		      lines.append inp + " " + outp		      textlines = split(title.textclean,endofLine)		      for each t in textlines		        lines.append t		      next		      lines.append ""		    end		  next		  		  lines.append "<end subtitles>"		  		  result = join(lines,endofLine.windows)		  result = converttext(result)		  return result		  		End Function	#tag EndEvent	#tag Event		Function GetDefaultNameEvent() As string		  return documentname + ".txt"		End Function	#tag EndEvent	#tag Event		Function GetLabelEvent() As string		  return "Avid DS"		End Function	#tag EndEvent	#tag Note, Name = DumpEvent					#tag EndNote	#tag Note, Name = MenuHandler		  dim f as folderItem		  dim t as textoutputStream		  dim i as integer		  dim st as string		  dim s as string		  dim sd as saveasDialog		  dim tc as timecode		  		  sd = new saveasDialog		  sd.Filter = "TEXT"		  sd.ActionButtonCaption = "Export DS"		  sd.suggestedFileName = title + ".txt"		  if document = nil then		    sd.initialDirectory = documentsFolder		  else		    sd.initialDirectory = document.parent		  end		  //f = sd.showmodalwithin(me)		  f = sd.showmodal		  if f<>nil then		    t = f.createtextfile		    if t<>nil then		      offlineWarning		      app.mouseCursor = system.cursors.wait		      tc = style.gettimeCode		      tc.settext movieoffsetField.text		      t.write titlelist.dumpds(tc)		      t.close 		      app.mouseCursor = system.cursors.standardpointer		    else		      msgbox "Error Main:FileExportDS: No TextOutPutStream"		    end		    		  end			#tag EndNote	#tag ViewBehavior		#tag ViewProperty			Name="documentname"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="TitleExporterBN"		#tag EndViewProperty		#tag ViewProperty			Name="dumpstring"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="TitleExporterBN"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="moviename"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="TitleExporterBN"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass