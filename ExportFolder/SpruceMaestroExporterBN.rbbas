#tag ClassProtected Class SpruceMaestroExporterBNInherits TitleExporterBN	#tag Event		Function ExportEvent() As string		  dim i,j,cf, currenthalign as integer		  dim tapeoffset as boolean		  dim lines(-1), result, inp, outp, t, tab, tlines(-1), line, newlines(-1) as string		  dim title as onetitle		  dim tc, offset as timecode		  		  tab = chr(9)		  		  tc = gettimeCode		  offset = getoffset		  call dict.getboolean("usetapeoffset", tapeoffset)		  		  for each title in titles		    if title.getinpoint<>"" and title.getoutpoint<>"" then		      inp = title.getinpoint		      outp = title.getoutpoint		      		      tc.settext inp		      tc.plus(offset)		      inp = tc.gettext		      tc.settext outp		      tc.plus(offset)		      outp = tc.gettext		      		      t = title.gettext		      		      redim newlines(-1)		      tlines = split(t,EndOfLine)		      for each line in tlines		        if title.style.underline and not style.underline then		          line = "^U"+line		        end		        if title.style.italic and not style.italic then		          line = "^I"+line		        end		        if title.style.bold and not style.bold then		          line = "^B"+line		        end		        		        // fix spruce maestro at the end of the line it should not have the tag, however it must be repeated at the beginning		        		        t = replaceall(t,"<b>","^B")		        t = replaceall(t,"</b>","^B")		        t = replaceall(t,"<i>","^I")		        t = replaceall(t,"</i>","^I")		        t = replaceall(t,"<u>","^U")		        t = replaceall(t,"</u>","^U")		        		        newlines.Append line		      next		      		      t = join(newlines,"|")		      		      		      		      		      		      		      		      		      		      		      lines.append inp + tab + "," + tab +  outp + tab +  ","  + tab + t		    end		  next		  		  result = join(lines,getlineEnding)		  result = converttext(result)		  return result		  		End Function	#tag EndEvent	#tag Event		Function GetDefaultDictEvent() As dictionary		  dim d as new dictionary		  d.value("textencoding") = "UTF-8"		  d.value("lineending") = "Unix"		  d.value("applyoffset") = false		  d.value("applyoffsetvalue") = "00:00:00:00"		  return d		End Function	#tag EndEvent	#tag Event		Function GetLabelEvent() As string		  return "Spruce Maestro"		End Function	#tag EndEvent	#tag Note, Name = sample				10:01:22:18 , 10:01:26:22 , Der Mythos besteht aus den|unterschiedlichsten Menschen,		10:01:27:03 , 10:01:29:17 , die in verschiedenen|Landesteilen leben,				"|" = neue Zeile			#tag EndNote	#tag ViewBehavior		#tag ViewProperty			Name="documentname"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="TitleExporterBN"		#tag EndViewProperty		#tag ViewProperty			Name="dumpstring"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="TitleExporterBN"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="moviename"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="TitleExporterBN"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass