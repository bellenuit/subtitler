#tag ClassProtected Class STLGraphicExporterBNInherits TitleExporterBN	#tag Event		Function ExportEvent() As string		  dim i,j,cf as integer		  dim tapeoffset as boolean		  dim lines(-1), result, inp, outp as string		  dim title as onetitle		  dim tc, offset as timecode		  		  		  tc = gettimeCode		  offset = getoffset		  call dict.getboolean("usetapeoffset", tapeoffset)		  		  lines.append "$SetFilePathToken = <<graphic>>"		  if tapeoffset then		    lines.append "$TapeOffset = true" 		  else		    lines.append "$TapeOffset = false" 		  end		  lines.append "$ColorIndex1 =  "  + style.DVDinfo("textColor")		  lines.append "$ColorIndex2 =  "  + style.DVDinfo("Outline1Color")		  lines.append "$ColorIndex3 =  "  + style.DVDinfo("Outline2Color")		  lines.append "$ColorIndex4 =  "  + style.DVDinfo("BackgroundColor")		  lines.append "$textContrast = "  + style.DVDinfo("textContrast")		  lines.append "$Outline1Contrast = " + style.DVDinfo("Outline1Contrast")		  lines.append "$Outline2Contrast = " + style.DVDinfo("Outline2Contrast")		  lines.append "$BackgroundContrast = " + style.DVDinfo("BackgroundContrast")		  lines.append "// STL file by Belle Nuit Subtitler " + app.shortVersion		  lines.append "// " + style.DVDinfo("Comments")		  		  for each title in titles		    exportfolder = title.exportfolder		    if title.getinpoint<>"" and title.getoutpoint<>"" then		      inp = title.getinpoint		      outp = title.getoutpoint		      		      tc.settext inp		      tc.plus(offset)		      inp = tc.gettext		      tc.settext outp		      tc.plus(offset)		      outp = tc.gettext		      		      lines.append inp + " , " + outp +  " , <<graphic>>" + title.filenameComplete		    end		  next		  		  result = join(lines,getlineEnding)		  return result		  		End Function	#tag EndEvent	#tag Event		Function GetDefaultDictEvent() As dictionary		  dim d as new dictionary		  d.value("lineending") = "Macintosh"		  d.value("applyoffset") = true		  d.value("applyoffsetvalue") = "00:00:00:00"		  d.value("usetapeoffset") = false		  return d		End Function	#tag EndEvent	#tag Event		Function GetDefaultNameEvent() As string		  return documentname + ".stl"		End Function	#tag EndEvent	#tag Event		Function GetDefaultPathEvent() As folderitem		  return exportfolder		End Function	#tag EndEvent	#tag Event		Function GetLabelEvent() As string		  return "STL Graphic"		End Function	#tag EndEvent	#tag Note, Name = dump		  dim i,j,cf as integer		  dim onet as onetitle		  dim titles(-1) as string		  dim lines(-1) as string		  dim result as string		  dim title as string		  dim tc as timecode		  dim inp, outp as string		  		  		  onet = new onetitle(style)		  		  lines.append "$SetFilePathToken = <<graphic>>"		  		  if tapeoffset then		    lines.append "$TapeOffset = true" 		  else		    lines.append "$TapeOffset = false" 		  end		  		  lines.append "$ColorIndex1 =  "  + style.DVDinfo("textColor")		  lines.append "$ColorIndex2 =  "  + style.DVDinfo("Outline1Color")		  lines.append "$ColorIndex3 =  "  + style.DVDinfo("Outline2Color")		  lines.append "$ColorIndex4 =  "  + style.DVDinfo("BackgroundColor")		  lines.append "$textContrast = "  + style.DVDinfo("textContrast")		  lines.append "$Outline1Contrast = " + style.DVDinfo("Outline1Contrast")		  lines.append "$Outline2Contrast = " + style.DVDinfo("Outline2Contrast")		  lines.append "$BackgroundContrast = " + style.DVDinfo("BackgroundContrast")		  lines.append "// " + style.DVDinfo("Comments")		  		  cf = titlecount		  		  tc = style.getTimeCode		  		  for i = 1 to cf		    onet = gettitle(i)		    if onet.getinpoint<>"" and onet.getoutpoint<>"" then		      inp = onet.getinpoint		      outp = onet.getoutpoint		      if not tapeoffset then		        tc.settext inp		        tc.minus(offset)		        inp = tc.gettext		        tc.settext outp		        tc.minus(offset)		        outp = tc.gettext		      end		      lines.append inp + " , " + outp +  " , <<graphic>>" + prefix + onet.getfilename + suffix		    end		  next		  		  result = join(lines,endofline)		  return result		  			#tag EndNote	#tag Note, Name = menuhandler		  dim f as folderItem		  dim t as textoutputStream		  dim i as integer		  dim st as string		  dim s as string		  dim suffix as string		  dim sd as saveasDialog		  dim tc as timecode		  dim fold as folderitem		  		  sd = new saveasDialog		  sd.Filter = "TEXT"		  sd.ActionButtonCaption = "Export STL"		  sd.suggestedFileName = title + ".stl"		  fold = getfolderItem(folderpath)		  if fold = nil then		    if document = nil then		      sd.initialDirectory = documentsFolder		    else		      sd.initialDirectory = document.parent		    end		  else		    sd.initialDirectory = fold		  end		  //f = sd.showmodalwithin(me )		  f = sd.showmodal		  select case exportformat		  case "PICT"		    if instr(style.standard,"DVD") > 0 then		      suffix = app.pictextension		    else		      suffix = "mask" + app.pictextension		    end		  case "PICT-alpha"		    suffix = app.pictextension		  case "TIFF", "TIFF-RLE", "TIFF-mask", "TIFF-DVD"		    suffix = app.tiffextension		  end		  		  if f<>nil then		    t = f.createtextfile		    if t<>nil then		      app.mouseCursor = system.cursors.wait		      tc = style.gettimeCode		      tc.settext movieoffsetField.text		      t.write titlelist.dumpsTL(prefix, suffix, app.stltapeoffset, tc)		      t.close 		      app.mouseCursor = system.cursors.standardpointer		    else		      msgbox "Error Main:FileExportSTL: No TextOutPutStream"		    end		    		  end			#tag EndNote	#tag ViewBehavior		#tag ViewProperty			Name="documentname"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="TitleExporterBN"		#tag EndViewProperty		#tag ViewProperty			Name="dumpstring"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="TitleExporterBN"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="moviename"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="TitleExporterBN"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass