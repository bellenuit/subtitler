#tag ClassProtected Class SoftniSUBConverterInherits TitleExporterBN	#tag Event		Function ExportEvent() As string		  dim lines(-1),textlines(-1), textline, result,  inp, outp as string		  dim t as onetitle		  dim tc, offset as timecode		  		  tc = gettimeCode		  offset = getoffset		  		  for each t in titles		    		    		    textlines= split(t.textclean,endofLine)		    for each textline in textlines		      lines.append textline		    next		    		    inp = t.getinpoint		    outp = t.getoutpoint		    tc.settext inp		    tc.plus(offset)		    inp = tc.gettext		    tc.settext outp		    tc.plus(offset)		    outp = tc.gettext		    		    lines.Append converttc(inp)+"\"+ converttc(outp)		    		  next		  		  result = join(lines,endofLine.windows)		  result = converttext(result)		  return result		  		End Function	#tag EndEvent	#tag Event		Function GetDefaultDictEvent() As dictionary		  dim d as new dictionary		  d.value("textencoding") = "DOS Latin1"		  d.value("applyoffset") = true		  d.value("applyoffsetvalue") = "00:00:00:00"		  return d		End Function	#tag EndEvent	#tag Event		Function GetDefaultNameEvent() As string		  return documentname + ".sub"		End Function	#tag EndEvent	#tag Event		Function GetLabelEvent() As string		  return "SoftNI SUB"		End Function	#tag EndEvent	#tag Event		Sub ImportEvent(s as string)		  dim i,j,countlines,item,voffset as integer		  dim start, ende, tctext as string		  dim tit as OneTitle		  dim separator as string		  dim line, lines(-1), title, titlenum as string		  dim state as string		  dim s2 as string		  		  s2 = replacelineEndings(s,endofLine)		  		  		  		  if instr(s2,"*CODE*")>0 then		    s2 = left(s2,instr(s2,"*CODE*")-1)		  end		  		  		  lines =split(s2,endofLine)		  tit = new OneTitle(style)		  		  		  for each line in lines		    		    // 01:00:12.10\01:00:14.14 timecode line l√§nge und : und \ in der mitte		    // formatierungen } (nur anfang  [] anfang und ende		    		    if trim(line)<>"" then		      if len(line)=23 and mid(line,12,1)="\" and instr(line,":")>0 then		        start = nthfield(line,"\",1)		        ende = nthfield(line,"\",2)		        start = replaceall(start,".",":")		        ende = replaceall(ende,".",":")		        tit.SetInOut(start,ende)		        if tit<>nil then		          titles.append tit		        end		        tit = new OneTitle(style)		      else		        // formatierungen } (nur anfang  [] anfang und ende		        // <up15> <up20>etc		        		        		        		        if left(line,3) = "<up" then		          voffset = val(mid(line,4,2))		          // tit.lines.insert 0, "/style vertical(-"+str(voffset)+")"		          line = mid(line,7)		        end		        		        if left(line,1) = "}" or left(line,1) = "{" then		          line = "<i>"+mid(line,2) + "</i>"		        elseif left(line,1) = "[" then		          line = "<i>"+mid(line,2) + "</i>"		          line = replace(line,"]","")		        end		        		        tit.AddLine line		      end		    end		    		    		  next		  		  		  		  // createedl uppercase(documentname),0,ubound(titlelist.titles)		  		End Sub	#tag EndEvent	#tag Method, Flags = &h0		Function ConvertTC(tc as string) As string		  return left(tc,8)+"."+right(tc,2)		  		End Function	#tag EndMethod	#tag ViewBehavior		#tag ViewProperty			Name="documentname"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="cTitleListConverter"		#tag EndViewProperty		#tag ViewProperty			Name="dumpstring"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="TitleExporterBN"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="moviename"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="TitleExporterBN"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass