#tag ClassProtected Class MTLConverterInherits cTitlelistConverter	#tag Event		Sub DoConvert(s as string)		  dim i,j,counttitles, countlines, item as integer		  dim line as string		  dim firstline as string		  dim evt as cedlevent		  dim tit as ctitle		  dim fieldsep as string		  dim lines(-1) as string		  dim titles(-1) as string		  dim words(-1) as string		  dim title, word,s2 as string		  dim waitfortitle as boolean		  		  		  		  endline = guessseparator(s)		  		  // remove starting endofline		  if instr(s,endofLine) = 1 and instr(s,endofLine+endofline) > 1 then		    s2 = mid(s,len(endofLine)+1)		  else		    s2 = s		  end		  		  // remove triple endoflines		  while instr(s2,endofLine+endofline+endofline)> 0  // double		    s2 = replaceall(s2,endofLine+endofline+endofline,endofLine+endofline)  // double to single		  wend		  		  // remove endofline + space + endofLine		  s2 = replaceall(s2,endofLine+" "+endofline,endofLine+endofline)  // double to single		  		  		  titles = split(s2,endline + endline)		  counttitles = ubound(titles)		  for i = 0 to counttitles		    title = titles(i)		    lines = split(title,endline)		    		    		    		    if not waitfortitle then		      // replace tabs with spaces		      lines(0) = replaceall(lines(0),chr(9)," ")		      // remove double spaces		      while instr(lines(0),"  ")> 0  // double		        lines(0) = replaceall(lines(0),"  "," ")  // double to single		      wend		      		      		      		      words = split(lines(0)," ")		      redim words(2)		      		      tit = new ctitle		      tit.eventnr = val(words(0))		      tit.eventsuffix = getsuffix(words(0))		      		      tit.start = words(1)		      tit.ende = words(2)		      lines.remove 0		    end		    for j=0 to ubound(lines)		      // recognize italics		      lines(j) = replaceall(lines(j),"<","<i") // prov		      lines(j) = replaceall(lines(j),">","</i>")		      lines(j) = replaceall(lines(j),"<i","<i>") 		      		      tit.lines.append lines(j)		    next		    		    if ubound(lines)>=0 then		      titlelist.titles.append tit		      waitfortitle = false		    else		      waitfortitle = true		    end		    		    		    if i > 0 and i mod 10 = 0 then		      progress 33+66*i/counttitles		    end		    if userCancelled then		      exit		    end		  next		  		  createEDL uppercase(documentname),0,ubound(titlelist.titles)		  		End Sub	#tag EndEvent	#tag Method, Flags = &h0		Sub Constructor()		  label = "MTL Text"		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function GetSuffix(s as string) As string		  dim i as integer		  		  for i = 1 to len(s)		    if instr("0123456789", mid(s,i,1)) = 0 then		      return mid(s,i)		    end 		  next		End Function	#tag EndMethod	#tag ViewBehavior		#tag ViewProperty			Name="binaryfile"			Group="Behavior"			InitialValue="0"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="charactercount"			Group="Behavior"			InitialValue="0"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="clipnames"			Group="Behavior"			InitialValue="0"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="documentname"			Group="Behavior"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="endline"			Group="Behavior"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="framerate"			Group="Behavior"			InitialValue="0"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="italicstring"			Group="Behavior"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="label"			Group="Behavior"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass