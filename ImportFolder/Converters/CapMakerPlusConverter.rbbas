#tag ClassProtected Class CapMakerPlusConverterInherits cTitlelistConverter	#tag Event		Sub DoConvert(s as string)		  dim m as memoryBlock		  dim item as integer		  dim tit, oldtitle as ctitle		  dim i,j,offset as integer		  dim start,ende,text as string		  dim minutes,frames, textlen as integer		  dim lines(-1), line as string		  dim format1, format2, format3 as integer		  dim mytc as new timecode		  		  if  instr(s,"CapMaker Plus") = 0 then		    msgBox "CapMaker Plus Import" + endofLine + endofLine+ "Wrong file format (magic)"		    return		  end		  		  m = newmemoryBlock(lenb(s))		  m.stringValue(0,lenb(s)) = s		  'm.littleEndian = true		  		  while offset < m.size		    // look for next &h0b  , actually a hack,because timecode is 11 characters long		    if m.byte(offset) = &h0b then		      // read timecode string if it is more than 00:00:00:00		      offset = offset + 1		      if m.size >= offset + 11 then		        start = m.stringValue(offset,11)		        offset = offset + 11		        if mytc.isTC(start) and start<>"00:00:00:00" and start<>"00:00:00;00" then		          if m.size >= offset + 13 then		            format1 = m.long(offset)		            offset = offset + 4		            format2 = m.long(offset)		            offset = offset + 4		            format3 = m.long(offset)		            offset = offset + 4		            textlen = m.byte(offset)		            offset = offset + 1		            if textlen = 255 then		              m.littleEndian = true		              textlen = m.short(offset)		              offset = offset + 2		            end		            if m.size >= offset + textlen then		              text = m.stringValue(offset,textlen)		              		              text = cleantext(text)		              		              		              		              lines = split(text,endofLine)		              		              if oldtitle<>nil then		                mytc.setfps tc.fps		                mytc.settext start		                mytc.setframes mytc.getframes-app.splitdistance		                oldtitle.ende = mytc.gettext		              else		                ende = start		              end		              		              tit = new ctitle		              if text<>"" then		                titlelist.titles.append tit		                i = i + 1		                tit.eventnr = i		              end		              if start<>"" then		                tit.start = start		                tit.ende = ende		              end		              for each line in lines		                if line<>"" then tit.lines.append line		              next		              oldtitle = tit		            end		          end		        end		      end		    else		      offset = offset + 1		    end		    if offset>0 and offset mod 10 = 0 then		      progress 33+66*offset/m.size		    end		    if userCancelled then		      exit		    end		  wend		  		  createedl documentname,0,ubound(titlelist.titles)		  		End Sub	#tag EndEvent	#tag Method, Flags = &h1		Protected Function CleanText(s as string) As string		  dim text as string		  dim rtf as rtfparser		  dim rtft as rtftextTagged		  dim temp as folderitem		  dim s2 as string		  		  s2 = trim(s)		  		  if left(s2,5) = "{\rtf" then		    'if instr(s2,"{\rtf") > 0 and instr(s2,"{\rtf") < 16 then		    rtf= new rtfparser		    rtft = new rtftextTagged		    rtf.parse s2, rtft		    text = rtft.text 		  elseif instr(s2,"{\rtf") > 0 and instr(s2,"{\rtf") < 16 then		    text = "RTF " + hex(ascb(left(s2,1)))  +"  "  + str(lenb(s)) + "  " +s2		    rtf= new rtfparser		    'rtft = new rtftextTagged		    'rtf.parse s2, rtft		    'text = rtft.text 		  else		    if userencoding<>nil then		      text =defineEncoding(s,userencoding)		    else		      text = s		    end		  end		  		  text = replacelineEndings(text,endofLine)		  		  return text		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub Constructor()		  label = "CapMaker Plus (.cap)"		  binaryfile = true		End Sub	#tag EndMethod	#tag ViewBehavior		#tag ViewProperty			Name="binaryfile"			Group="Behavior"			InitialValue="0"			Type="boolean"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="charactercount"			Group="Behavior"			InitialValue="0"			Type="integer"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="clipnames"			Group="Behavior"			InitialValue="0"			Type="boolean"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="documentname"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="endline"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="framerate"			Group="Behavior"			InitialValue="0"			Type="double"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="italicstring"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="label"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="cTitlelistConverter"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass