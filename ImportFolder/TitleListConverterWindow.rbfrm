#tag WindowBegin Window TitleListConverterWindow   BackColor       =   16777215   Backdrop        =   0   BalloonHelp     =   ""   CloseButton     =   True   Composite       =   False   Frame           =   0   FullScreen      =   False   HasBackColor    =   False   Height          =   559   ImplicitInstance=   True   LiveResize      =   False   MacProcID       =   0   MaxHeight       =   32000   MaximizeButton  =   False   MaxWidth        =   500   MenuBar         =   2   MenuBarVisible  =   True   MinHeight       =   553   MinimizeButton  =   True   MinWidth        =   500   Placement       =   0   Resizeable      =   True   Title           =   "Import"   Visible         =   True   Width           =   500   Begin RtfEditField ImportField      AcceptTabs      =   False      Alignment       =   0      AutoDeactivate  =   True      AutomaticallyCheckSpelling=   True      BackColor       =   16777215      Bold            =   False      Border          =   True      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Format          =   ""      Height          =   100      HelpTag         =   ""      HideSelection   =   True      Index           =   -2147483648      InitialParent   =   ""      Italic          =   False      Left            =   0      LimitText       =   0      LockBottom      =   False      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   True      Mask            =   ""      Multiline       =   True      ReadOnly        =   True      Scope           =   0      ScrollbarHorizontal=   False      ScrollbarVertical=   True      Styled          =   False      TabIndex        =   0      TabPanelIndex   =   0      TabStop         =   True      Text            =   ""      TextColor       =   0      TextFont        =   "Smallsystem"      TextSize        =   0      TextUnit        =   0      Top             =   151      Underline       =   False      UseFocusRing    =   False      Visible         =   True      Width           =   500   End   Begin TextArea TextField      AcceptTabs      =   False      Alignment       =   0      AutoDeactivate  =   True      AutomaticallyCheckSpelling=   True      BackColor       =   16777215      Bold            =   False      Border          =   True      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Format          =   ""      Height          =   250      HelpTag         =   ""      HideSelection   =   True      Index           =   -2147483648      InitialParent   =   ""      Italic          =   False      Left            =   0      LimitText       =   0      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   True      Mask            =   ""      Multiline       =   True      ReadOnly        =   True      Scope           =   0      ScrollbarHorizontal=   False      ScrollbarVertical=   True      Styled          =   False      TabIndex        =   0      TabPanelIndex   =   0      TabStop         =   True      Text            =   ""      TextColor       =   0      TextFont        =   "Smallsystem"      TextSize        =   0      TextUnit        =   0      Top             =   275      Underline       =   False      UseFocusRing    =   False      Visible         =   True      Width           =   500   End   Begin Label ImportLabel      Active          =   ""      AutoDeactivate  =   True      Bold            =   False      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   16      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   False      Left            =   9      LockBottom      =   False      LockedInPosition=   False      LockLeft        =   False      LockRight       =   False      LockTop         =   False      Multiline       =   False      Scope           =   0      Selectable      =   False      TabIndex        =   1      TabPanelIndex   =   0      TabStop         =   True      Text            =   "Import"      TextAlign       =   0      TextColor       =   0      TextFont        =   "Smallsystem"      TextSize        =   0      Top             =   134      Transparent     =   False      Underline       =   False      Visible         =   True      Width           =   62      Window          =   0      _mWindow        =   0   End   Begin Label TextlistLabel      Active          =   ""      AutoDeactivate  =   True      Bold            =   False      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   16      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   False      Left            =   9      LockBottom      =   False      LockedInPosition=   False      LockLeft        =   False      LockRight       =   False      LockTop         =   False      Multiline       =   False      Scope           =   0      Selectable      =   False      TabIndex        =   2      TabPanelIndex   =   0      TabStop         =   True      Text            =   "Titlelist"      TextAlign       =   0      TextColor       =   0      TextFont        =   "Smallsystem"      TextSize        =   0      Top             =   256      Transparent     =   False      Underline       =   False      Visible         =   True      Width           =   150      Window          =   0      _mWindow        =   0   End   Begin PopUpMenu2 TextEncodingMenu      AutoDeactivate  =   True      Bold            =   False      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   16      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   ""      Italic          =   False      Left            =   183      ListIndex       =   0      LockBottom      =   False      LockedInPosition=   False      LockLeft        =   False      LockRight       =   False      LockTop         =   False      Scope           =   0      TabIndex        =   0      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "Smallsystem"      TextSize        =   0      TextUnit        =   0      Top             =   38      Underline       =   False      Visible         =   True      Width           =   150   End   Begin ProgressBar Progress      AutoDeactivate  =   True      Enabled         =   True      Height          =   12      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Left            =   8      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   False      LockTop         =   False      Maximum         =   100      Scope           =   0      TabIndex        =   5      TabPanelIndex   =   0      TabStop         =   True      Top             =   536      Value           =   0      Visible         =   False      Width           =   100   End   Begin PopUpMenu2 FPSmenu      AutoDeactivate  =   True      Bold            =   False      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   16      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   ""      Italic          =   False      Left            =   183      ListIndex       =   0      LockBottom      =   False      LockedInPosition=   False      LockLeft        =   False      LockRight       =   False      LockTop         =   False      Scope           =   0      TabIndex        =   0      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "Smallsystem"      TextSize        =   0      TextUnit        =   0      Top             =   64      Underline       =   False      Visible         =   True      Width           =   150   End   Begin PopUpMenu2 ImportFileFormatMenu      AutoDeactivate  =   True      Bold            =   False      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   16      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   ""      Italic          =   False      Left            =   183      ListIndex       =   0      LockBottom      =   False      LockedInPosition=   False      LockLeft        =   False      LockRight       =   False      LockTop         =   False      Scope           =   0      TabIndex        =   0      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "Smallsystem"      TextSize        =   0      TextUnit        =   0      Top             =   12      Underline       =   False      Visible         =   True      Width           =   150   End   Begin Label frameratelabel      Active          =   ""      AutoDeactivate  =   True      Bold            =   False      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   16      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   False      Left            =   5      LockBottom      =   False      LockedInPosition=   False      LockLeft        =   False      LockRight       =   False      LockTop         =   False      Multiline       =   False      Scope           =   0      Selectable      =   False      TabIndex        =   3      TabPanelIndex   =   0      TabStop         =   True      Text            =   "Framerate"      TextAlign       =   2      TextColor       =   0      TextFont        =   "Smallsystem"      TextSize        =   0      Top             =   64      Transparent     =   False      Underline       =   False      Visible         =   True      Width           =   167      Window          =   0      _mWindow        =   0   End   Begin Label textencodinglabel      Active          =   ""      AutoDeactivate  =   True      Bold            =   False      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   16      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   False      Left            =   5      LockBottom      =   False      LockedInPosition=   False      LockLeft        =   False      LockRight       =   False      LockTop         =   False      Multiline       =   False      Scope           =   0      Selectable      =   False      TabIndex        =   4      TabPanelIndex   =   0      TabStop         =   True      Text            =   "Text Encoding"      TextAlign       =   2      TextColor       =   0      TextFont        =   "Smallsystem"      TextSize        =   0      Top             =   38      Transparent     =   False      Underline       =   False      Visible         =   True      Width           =   167      Window          =   0      _mWindow        =   0   End   Begin Label listformatlabel      Active          =   ""      AutoDeactivate  =   True      Bold            =   False      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   16      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   False      Left            =   5      LockBottom      =   False      LockedInPosition=   False      LockLeft        =   False      LockRight       =   False      LockTop         =   False      Multiline       =   False      Scope           =   0      Selectable      =   False      TabIndex        =   5      TabPanelIndex   =   0      TabStop         =   True      Text            =   "List Format"      TextAlign       =   2      TextColor       =   0      TextFont        =   "Smallsystem"      TextSize        =   0      Top             =   12      Transparent     =   False      Underline       =   False      Visible         =   True      Width           =   167      Window          =   0      _mWindow        =   0   End   Begin TimeCodeOld TC      Height          =   32      Index           =   -2147483648      InitialParent   =   ""      Left            =   458      LockedInPosition=   False      Scope           =   0      TabIndex        =   11      TabPanelIndex   =   0      TabStop         =   True      Top             =   5      Width           =   32   End   Begin PushButton ImportButton      AutoDeactivate  =   True      Bold            =   False      ButtonStyle     =   0      Cancel          =   False      Caption         =   "Import"      Default         =   True      Enabled         =   False      Height          =   16      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   False      Left            =   183      LockBottom      =   False      LockedInPosition=   False      LockLeft        =   False      LockRight       =   False      LockTop         =   False      Scope           =   0      TabIndex        =   6      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "Smallsystem"      TextSize        =   0      TextUnit        =   0      Top             =   116      Underline       =   False      Visible         =   True      Width           =   150   End   Begin PushButton SubtitlerButton      AutoDeactivate  =   True      Bold            =   False      ButtonStyle     =   0      Cancel          =   False      Caption         =   "Create Document"      Default         =   False      Enabled         =   False      Height          =   16      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   False      Left            =   340      LockBottom      =   False      LockedInPosition=   False      LockLeft        =   False      LockRight       =   False      LockTop         =   False      Scope           =   0      TabIndex        =   7      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "Smallsystem"      TextSize        =   0      TextUnit        =   0      Top             =   116      Underline       =   False      Visible         =   True      Width           =   150   End   Begin DocumentSelector DocumentSelector1      AutoDeactivate  =   True      Bold            =   False      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   16      HelpTag         =   ""      includetemplates=   0      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   ""      Italic          =   False      Left            =   183      ListIndex       =   0      LockBottom      =   False      LockedInPosition=   False      LockLeft        =   False      LockRight       =   False      LockTop         =   False      Scope           =   0      TabIndex        =   0      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "Smallsystem"      TextSize        =   0      TextUnit        =   0      Top             =   88      Underline       =   False      Visible         =   True      Width           =   150   End   Begin Label styletemplatelabel      Active          =   ""      AutoDeactivate  =   True      Bold            =   False      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   16      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   False      Left            =   5      LockBottom      =   False      LockedInPosition=   False      LockLeft        =   False      LockRight       =   False      LockTop         =   False      Multiline       =   False      Scope           =   0      Selectable      =   False      TabIndex        =   8      TabPanelIndex   =   0      TabStop         =   True      Text            =   "Style Template"      TextAlign       =   2      TextColor       =   0      TextFont        =   "Smallsystem"      TextSize        =   0      Top             =   88      Transparent     =   False      Underline       =   False      Visible         =   True      Width           =   167      Window          =   0      _mWindow        =   0   End   Begin Label statuslabel      Active          =   ""      AutoDeactivate  =   True      Bold            =   False      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   False      Left            =   122      LockBottom      =   False      LockedInPosition=   False      LockLeft        =   False      LockRight       =   False      LockTop         =   False      Multiline       =   False      Scope           =   0      Selectable      =   False      TabIndex        =   9      TabPanelIndex   =   0      TabStop         =   True      Text            =   ""      TextAlign       =   0      TextColor       =   0      TextFont        =   "Smallsystem"      TextSize        =   0      Top             =   532      Transparent     =   False      Underline       =   False      Visible         =   True      Width           =   229      Window          =   0      _mWindow        =   0   EndEnd#tag EndWindow#tag WindowCode	#tag Event		Sub Close()		  dim d as new dictionary		  d.value("top") = top		  d.value("left") = left		  d.value("listformat") = importfileformatMenu.text		  d.value("textencoding") = textencodingmenu.text		  d.value("framerate") = fpSmenu.text		  d.value("usestyleof") = documentselector1.text		  d.value("importpath") = importpath		  app.importerdict = d		End Sub	#tag EndEvent	#tag Event		Sub DropObject(obj As DragItem, action As Integer)		  if obj.folderItemavailable then		    'if not app.reg.online then		    'msgBox "You need an online license to use this tool."		    'return		    'end		    fileimport obj.folderItem		    		    importbutton.default = false		    subtitlerButton.default = true		    subtitlerButton.enabled = true		  end		End Sub	#tag EndEvent	#tag Event		Sub EnableMenuItems()		  'fileimporttitlelist.enable		  'if converter<>nil  then		  'fileexportEDL.enable		  'filesaveSubtitlerFile.enable		  'end		  'appleabouttitlelistconverter.enable		  'if importstring<>"" then		  'editClear.enable		  'end		End Sub	#tag EndEvent	#tag Event		Sub Open()		  dim i as integer		  dim d as dictionary		  dim s as string		  dim lines(-1) as string		  		  acceptfileDrop("any")		  		  converters.Append new adobeEncoreconverter		  converters.append new adobeEncoreimageconverter		  		  exporters.Append new BNDExporter		  converters.append new BSPlayerConverter		  		  converters.append new DSConverter		  		  converters.append new cbabelFishConverter		  		  converters.append new capMakerPlusConverter		  		  		  converters.append new c890Converter		  converters.append new CIPConverter		  		  converters.append new ascConverter		  		  		  converters.append new cinetypConverter		  converters.append new cinetypTCConverter		  converters.append new cinetypeliteConverter		  converters.append new closedCaptionConverter		  		  exporters.Append new DCDMSubtitleExporter		  exporters.Append new CinecanvasExporterBN		  		  exporters.append new Caption1LinerExporter		  		  		  converters.append new edlConverter		  converters.append new ebuConverter		  converters.append new ebuconverterteletext		  converters.append new EuroLabConverter		  converters.append new EuroLab2Converter		  		  		  converters.append new FABCOnverter		  converters.append new filmTextStudioConverter		  converters.append new FCPXMLConverter		  		  converters.append new flyingSkyConverter		  		  converters.append new Ledit10Converter		  		  converters.append new mauritiusFilmConverter		  		  converters.append new mtlConverter		  		  converters.append new onlineCaptionMakerConverter		  		  		  converters.append new pacconverter		  converters.append new powersubtitlingConverter		  converters.append new quickTimeConverter		  converters.append new SoftitlerConverter		  converters.append new softitrageConverter		  exporters.Append new SoftniSUBConverter		  		  converters.append new SonicProducerConverter		  converters.append new SonicSSTConverter		  		  converters.append new structuredTitlesConverter		  converters.append new STLConverter		  converters.Append new SUBCavenaConverter		  converters.append new SubripConverter		  converters.append new SubstationAlphaConverter		  'converters.append new STLBinaryConverter		  converters.append new tempoConverter		  converters.append new TimeCodeConverter		  converters.append new TimeCodeDieseConverter		  		  exporters.append new TMPGEncDVDAuthorExporterBN		  		  converters.append new transscriptConverter		  converters.append new titraConverter		  converters.append new titra2Converter		  converters.append new titra4Converter		  converters.append new titracodeConverter		  		  exporters.append new swedishListExporterBN		  		  		  		  for i = 0 to ubound(converters)		    lines.append converters(i).label		  next		  for i = 0 to ubound(exporters)		    lines.append exporters(i).getlabel		  next		  lines.sort		  for i = 0 to ubound(lines)		    importfileformatmenu.addRow lines(i)		  next		  		  textencodingmenu.settext "MacRoman"		  fpSmenu.settext "25"		  if app.importerdict<>nil then		    d = app.importerdict		    		    if d.getinteger("top",i) then top =i		    if top > screen(0).height-40 or top < 40 then top = 40		    		    if d.getinteger("left",i) then left =i		    if left > screen(0).width-40 or left < 40 then left = 40		    		    if d.getstring("listformat",s) then importfileformatMenu.settext s 		    if d.getstring("textencoding",s) and s<>"" then textencodingmenu.settext s 		    if d.getstring("framerate",s) and s<>"" then fpSmenu.settext s 		    if d.getstring("usestyleof",s) then documentselector1.settext s		    if d.getstring("importpath",s) then importpath = s		  end		  		  setlanguage		  		End Sub	#tag EndEvent	#tag MenuHandler		Function EditClear() As Boolean Handles EditClear.Action			importstring = ""			import		End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileCLose() As Boolean Handles FileCLose.Action			self.close			return true		End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileSaveSubtitlerFile() As Boolean Handles FileSaveSubtitlerFile.Action			'dim s as string			'Dim dlg as SaveAsDialog			'Dim f as FolderItem			'dim subtitler as subtitlerFile			'dlg=New SaveAsDialog			'dlg.InitialDirectory=Volume(0).Child("Mac OS 9")			'dlg.promptText="Enter a filename for the Textfile"			'dlg.SuggestedFileName=documentname+" titles"			'dlg.filter = "text"			'dlg.Title="Save your file"			'f=dlg.ShowModalwithin(self)			'if f = nil then			'return true			'end			'			'setprogress 0,true			'			'			'			's = converter.titlelist.dump(usetc)			'			'			'			'setprogress 50,true			'			'subtitler = new subtitlerFile			'subtitler.document = f			'subtitler.titlelisttext = s			'select case classicmenu.listindex			'case 0			'subtitler.classic = true			'subtitler.saveDocument f.name, false			'case 1			'subtitler.saveDocument f.name, false			'case 2			'subtitler.version14 = true			'subtitler.savexmlDocument f.name, false			'end			'			'			'setprogress 100,true			'setprogress 0, false			'			'return true		End Function	#tag EndMenuHandler	#tag Method, Flags = &h0		Function binaryfilter(s as string) As string		  dim m,m2 as memoryBlock		  dim i,size,offset, offset2, l, linewidth as integer		  		  		  size = lenb(s)		  if size = 0 then		    return ""		  end		  		  m = newmemoryBlock(size)		  m.stringValue(0,size) = s		  		  for i = 0 to size-1		    if m.byte(i) < 32 or m.byte(i) > 126 then		      m.byte(i) = asc(".")		    end		  next		  		  m2 = newmemoryBlock(size + size/64+1)		  		  linewidth = 64		  		  for i = 0 to size-1 step linewidth		    l = min(linewidth,size-offset)		    m2.stringValue(offset2,l) = m.stringValue(offset,l)		    offset2 = offset2 + 1		    m2.byte(offset2) = 13		    offset2 = offset2 + linewidth		    offset = offset + linewidth		  next		  		  return m2.stringValue(0,m2.size)		  		  		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub Convert()		  dim i as integer		  dim s as string		  dim exporter as titleExporterBN		  dim m as main		  		  if importstring = "" then		    textField.text = ""		    return		  end		  		  		  setprogress 50, true		  		  converter = currentconverter		  if converter <> nil then		    m = documentselector1.getDocument(true)		    if m<>nil then		      currentconverter.charactercount =  m.style.CalculateCharactersPerLine		      // hack not to show it		      m.closeanyway		    else		      currentconverter.charactercount = 72		    end		    		    		    		    converter.documentname = documentname		    converter.framerate = val(fpsmenu.text)		    converter.tc = tc		    converter.clipnames = true		    converter.userencoding = currentEncoding		    converter.Convert importstring, italicstring		    		    if len(importstring)<>len(italicstring) then		      'msgbox str(len(importstring)) + " <> " +str(len(italicstring))		    end		    		    setprogress 90,true		    		    		    textField.text = converter.titlelist.dump(true)		  else		    exporter = currentexporter		    exporter.dict = new dictionary		    exporter.dict.value("textencoding") = textencodingmenu.Text		    exporter.dict.value("framerate") = fpsmenu.text		    exporter.style = new subtitle		    if documentselector1.getDocument<>nil then		      exporter.style.clone documentselector1.getDocument.style 		    end		    		    textField.text = exporter.import(importstring)		  end		  		  setprogress 100,true		  setprogress 0,false		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub CreateSubtitlerFile()		  dim m,m2 as main		  m = documentselector1.getDocument(true)		  if m=nil then 		    m = new main		  end		  m.title = documentname + " titles"		  m.document = nil		  m.titlelist.text = textfield.text		  		  		  		  		  		  m.show		  		  m.touchhack		  		  lastmain =m		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function CurrentConverter() As cTitlelistConverter		  dim i as integer		  		  if importfileformatmenu.text = "" then return nil		  		  for i = 0 to ubound(converters)		    if converters(i).label = importfileformatmenu.text then		      return converters(i)		    end		  next		  		  'msgbox "CurrentConverter: unknown converter error"		  		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function CurrentEncoding() As textencoding		  		  select case textencodingmenu.Text		  case "DOS Chinese Simplified"		    return encodings.DOSChineseSimplif		  case "DOS Chinese Traditional"		    return encodings.DOSCHineseTrad		  case "DOS Japanese"		    return encodings.DOSJapanese		  case "DOS Korean"		    return encodings.DOSKorean		  case "DOS Latin1"		    return encodings.doslatin1		  case "DOS Latin2"		    return encodings.doslatin2		  case "DOS Thai"		    return encodings.DOSThai		  case "DOS Turkish"		    return encodings.dosturkish		  case "ISO Latin1"		    return encodings.isoLatin1		  case "ISO Latin2"		    return encodings.isoLatin2		  case "ISO Latin3"		    return encodings.isoLatin3		  case "ISO Latin4"		    return encodings.isoLatin4		  case "ISO Latin5"		    return encodings.isoLatin5		  case "ISO Latin6"		    return encodings.isoLatin6		  case "ISO Latin7"		    return encodings.isoLatin7		  case "ISO Latin8"		    return encodings.isoLatin8		  case "ISO Latin9"		    return encodings.isoLatin9		  case "ISO LatinArabic"		    return encodings.isoLatinArabic		  case "ISO LatinCyrillic"		    return encodings.isoLatinCyrillic		  case "ISO LatinGreek"		    return encodings.isoLatinGreek		  case "ISO LatinHebrew"		    return encodings.IsoLatinHebrew		  case "Mac Arabic"		    return encodings.macarabic		  case "Mac Central European Roman"		    return encodings.macCentralEurRoman		  case "Mac Chinese Simplified"		    return encodings.macchinesesimp		  case "Mac Chinese Traditional"		    return encodings.macchinesetrad		  case "Mac Greek"		    return encodings.macGreek		  case "Mac Hebrew"		    return encodings.machebrew		  case "Mac Japanese"		    return encodings.MacJapanese		  case "Mac Korean"		    return encodings.MacKorean		  case "Mac Roman"		    return encodings.macRoman		  case "Mac Romanian"		    return encodings.macRomanian  		  case "Mac Tamil"		    return encodings.MacTamil		  case "Mac Telugu"		    return encodings.MacTelugu		  case "Mac Thai"		    return encodings.MacThai		  case "Mac Tibetan"		    return encodings.MacTibetan		  case "Mac Turkish"		    return encodings.macTurkish		  case "Mac Vietnamese"		    return encodings.MacVietnamese		  case "Windows Arabic"		    return encodings.windowsArabic		  case "Windows Cyrillic"		    return encodings.windowsCyrillic		  case "Windows Greek"		    return encodings.windowsGreek		  case "Windows Hebrew"		    return encodings.windowsHebrew		  case "Windows KoreanJohab"		    return encodings.WindowsKoreanJohab		  case "Windows Latin1"		    return encodings.windowsLatin1		  case "Windows Latin2"		    return encodings.windowsLatin2		  case "Windows Latin5"		    return encodings.windowslatin5		  case "Windows Vietnamese"		    return encodings.WindowsVietnamese		  case "UTF-8"		    return encodings.uTF8		  case "UTF-16"		    return encodings.uTF16		  else		    msgbox "CurrentEncoding: unknown encoding error"		  end		End Function	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub CurrentEncoding(assigns enc as textencoding)		  select case enc		  case encodings.ISOLatin1		    textencodingmenu.settext "DOS Latin1"		  case encodings.macRoman		    textencodingmenu.settext "MacRoman"		  case encodings.windowsLatin1		    textencodingmenu.settext"Windows Latin1"		  case encodings.uTF8		    textencodingmenu.settext"UTF-8"		  case encodings.uTF16		    textencodingmenu.settext"UTF-16"		  else		    'msgbox "CurrentEncoding: unknown encoding error"		  end		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function CurrentExporter() As titleexporterBN		  dim i as integer		  		  if importfileformatmenu.text = "" then return nil		  		  for i = 0 to ubound(exporters)		    if exporters(i).getlabel = importfileformatmenu.text then		      return exporters(i)		    end		  next		  		  'msgbox "CurrentExporter: unknown converter error"		  		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub FileImport(f as folderItem)		  dim t as textinputStream		  		  if f = nil then return		  		  setprogress 0,true		  		  importfile = f		  t = importfile.openastextFile		  if t = nil then		    return 		  end		  		  		  		  		  		  if currentconverter <> nil and not currentconverter.binaryfile then		    t.Encoding = currentEncoding		  end		  		  importstring = readUnicode(t)		  		  t.close		  		  documentname = importfile.name		  		  setprogress 10,true		  		  italicstring = ""		  		  import		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Import()		  dim rtf as rtfparser		  dim rtft as rtftext		  dim temp as folderitem		  dim b as binaryStream		  dim tc as timecode		  		  		  if (currentconverter = nil and currentexporter = nil) or currentencoding = nil then return		  		  setprogress 20,true		  		  		  		  		  if currentconverter <> nil and not currentconverter.binaryfile then		    if left(importstring,5)<>"{\rtf" then		      importstring = defineEncoding(importstring,currentencoding)		    end		  elseif CurrentExporter<> nil then		    if left(importstring,5)<>"{\rtf" then		      importstring = defineEncoding(importstring,currentencoding)		    end		  end		  importField.text = ""		  		  		  if currentconverter<>nil then		    		    		    		    		    if currentconverter.binaryfile then		      		      importfield.seltext = binaryfilter(importstring)		    elseif leftb(importstring,5) = "{\rtf" then		      if importfile<>nil then		        statuslabel.text = "Parsing RTF (may take a while)"		        statuslabel.refresh		        b = importfile.openasbinaryFile		        if b<>nil then 		          rtf = new rtfparser		          rtft = new rtftext		          rtf.parse b,rtft		          b.close		        end		        if rtft.text <>"" then 		          importstring = rtft.text		          italicstring = rtft.italictext		        end		        statuslabel.text = ""		      end		      		      importfield.seltext = importstring		    else		      		      importfield.seltext = importstring		    end		    importfield.selstart = 0		  elseif currentexporter<>nil then		    		    		    tc = new timecode		    tc.setfps FPSmenu.text		    currentexporter.tc = tc		    		    		    if currentexporter.IsBinary then		      importfield.seltext = binaryfilter(importstring)		    else		      importfield.seltext = importstring		    end		    importfield.selstart = 0		  end		  		  setprogress 33, true		  		  convert		  		  setprogress 0,false		  		  		  		  		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub ImportTitlelist(f as folderitem=nil)		  Dim dlg as OpenDialog		  		  dim fol as folderitem		  		  'if not app.reg.online then		  'msgBox "You need an online license to use this tool."		  'return		  'end		  		  if f=nil then		    dlg=New OpenDialog		    dlg.Title="Select a Title List"		    dlg.Filter="any"		    if importpath <> "" then		      fol = getfolderItem(importpath)		      if fol<>nil then		        dlg.InitialDirectory = fol		      end		    end		    		    f = dlg.showmodal		  end		  if f <> nil then		    importpath = f.parent.absolutePath		    fileimport f		    		    importbutton.default = false		    subtitlerButton.default = true		    subtitlerButton.enabled = true		  end		  		  		  		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Function ReadUnicode(t as textinputStream) As string		  dim enc as textencoding		  dim f1,f2,f3 as string		  dim s as string		  dim m as memoryBlock		  dim i,c as integer		  dim m2 as memoryBlock		  dim rtfdetect as string		  enc = t.encoding		  		  if not (enc = encodings.utf8 or enc = encodings.utf16) then		    return t.readall		  end		  		  if currentconverter <> nil and currentconverter.binaryfile then		    return t.readall		  end		  		  t.encoding = nil		  		  f1 = t.read(1)		  f2 = t.read(1)		  		  		  if ascb(f1) = ascb("{") and ascb(f2) = ascb("\")   then		    rtfdetect = t.read(3)		    if rtfdetect = "rtf" then		      s = "{\rtf"+t.readall		      s = s.defineEncoding(encodings.ascii)		      currentencoding = encodings.ascii		      return s		    end		  end		  		  if ascb(f1) = &hFE and ascb(f2) = &hFF then		    t.encoding = encodings.utf16		    s = t.readall		    currentencoding = s.encoding		    return s		  end		  if ascb(f1) = &hFF and ascb(f2) = &hFE then		    s = t.readall		    		    if targetmacos then		      s = swapShort(s)		    end		    s =  s.defineEncoding(encodings.utf16)		    currentencoding = s.encoding		    return s		  end		  		  		  		  		  		  f3 = t.read(1)		  if ascb(f1) = &hEF and ascb(f2) = &hBB and ascb(f2) = &hBF then		    t.encoding = encodings.utf8		    s = t.readall		    currentencoding = s.encoding		    return s		  end		  		  		  s = t.readall		  m = newmemoryBlock(lenb(s)+3)		  m.byte(0) = ascb(f1)		  m.byte(1) = ascb(f2)		  m.byte(2) = ascb(f3)		  m.stringValue(3,lenb(s))=s		  		  'rtfdetect = m.stringValue(0,5)		  'if rtfdetect = "{\rtf" then		  's = m.stringValue(0,m.size)		  's = s.defineEncoding(encodings.ascii)		  'else		  s = m.stringValue(0,m.size)		  s = s.defineEncoding(enc)		  'end		  		  return s		  		  // reading byte order mark, overriding the utf8 or utf 16 setting		  'byte order marks		  '00 00 FE FF UTF-32, big-endian		  'FF FE 00 00 UTF-32, little-endian		  'FE FF UTF-16, big-endian		  'FF FE UTF-16, little-endian		  'EF BB BF UTF-8		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub SetLanguage()		  dim value as string		  dim languagedict as dictionary		  languagedict = app.languagedict		  		  if languagedict =nil then return		  		  		  if languagedict.getstring("importtitle", value) then title = value		  		  if languagedict.getstring("importlistformat", value) then listformatlabel.text = value		  if languagedict.getstring("importtextencoding", value) then textencodinglabel.text = value		  if languagedict.getstring("importframerate", value) then frameratelabel.text = value		  if languagedict.getstring("importstyletemplate", value) then styletemplatelabel.text = value		  if languagedict.getstring("importimport", value) then importlabel.text = value		  if languagedict.getstring("importimport", value) then importbutton.caption = value		  if languagedict.getstring("importtitlelist", value) then textlistlabel.text = value		  if languagedict.getstring("importdocument", value) then subtitlerButton.caption = value		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub SetProgress(n as integer, setvisible as boolean)		  progress.visible = setvisible		  progress.value = n		  if setvisible then		    app.mouseCursor=system.Cursors.Wait		  else		    app.mousecursor = System.Cursors.StandardPointer		  end		  updatenow		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Function SwapShort(s as string) As string		  dim m,m2 as memoryBlock		  dim s2 as string		  dim i,c as integer		  		  m = newmemoryBlock(lenb(s))		  m.littleEndian = true		  m.stringValue(0,m.size) = s		  m2 = newmemoryBlock(lenb(s))		  m2.littleEndian = false		  c = m.size/2-1		  for i = 0 to c		    m2.short(i+i) = m.short(i+i)		  next		  s2 =  m2.stringValue(0,m2.size)		  		  return s2		End Function	#tag EndMethod	#tag Property, Flags = &h0		converter As ctitlelistconverter	#tag EndProperty	#tag Property, Flags = &h0		converters(-1) As cTitleListConverter	#tag EndProperty	#tag Property, Flags = &h0		documentname As string	#tag EndProperty	#tag Property, Flags = &h1		Protected exporters(-1) As titleexporterBN	#tag EndProperty	#tag Property, Flags = &h0		importfile As folderItem	#tag EndProperty	#tag Property, Flags = &h0		importpath As string	#tag EndProperty	#tag Property, Flags = &h0		importstring As string	#tag EndProperty	#tag Property, Flags = &h21		Private italicstring As string	#tag EndProperty	#tag Property, Flags = &h0		lastmain As main	#tag EndProperty	#tag Property, Flags = &h0		newline As string	#tag EndProperty#tag EndWindowCode#tag Events TextEncodingMenu	#tag Event		Sub Open()		  me.init array("DOS Chinese Simplified", "DOS Chinese Traditional", "DOS Japanese", "DOS Korean", "DOS Latin1","DOS Latin2", "DOS Thai", "DOS Turkish",_		  "ISO Latin1", "ISO Latin2", "ISO Latin3", "ISO Latin4", "ISO Latin5", "ISO Latin6", "ISO Latin7", "ISO Latin8", "ISO Latin9", _		  "ISO LatinArabic", "ISO LatinCyrillic", "ISO LatinGreek", "ISO LatinHebrew", _		  "Mac Arabic", "Mac Chinese Simplified", "Mac Chinese Traditional","Mac Japanese" , "Mac Korean",  _		  "Mac Central European Roman", "Mac Cyrillic", "Mac Greek", "Mac Hebrew", _		  "Mac Roman", "Mac Romanian","Mac Tamil", "Mac Telugu", "Mac Thai", "Mac Tibetan",  "Mac Turkish","Mac Vietnamese",  _		  "UTF-8","UTF-16", _		  "Windows Arabic", "Windows Cyrillic", "Windows Greek", "Windows Hebrew", "Windows KoreanJohab", _		  "Windows Latin1", "Windows Latin2", "Windows Latin5", "Windows Vietnamese")		End Sub	#tag EndEvent	#tag Event		Sub Change()		  fileimport importfile // force reimport textencoding		End Sub	#tag EndEvent#tag EndEvents#tag Events FPSmenu	#tag Event		Sub Open()		  me.init array("23.98","24","25","29.97","30")		  tc.constructor(val(me.text))		End Sub	#tag EndEvent	#tag Event		Sub Change()		  tc.constructor(val(me.text))		  convert		End Sub	#tag EndEvent#tag EndEvents#tag Events ImportFileFormatMenu	#tag Event		Sub Change()		  if me.listIndex>-1 then importbutton.enabled = true		  Convert		End Sub	#tag EndEvent#tag EndEvents#tag Events ImportButton	#tag Event		Sub Action()		  importtitlelist		End Sub	#tag EndEvent#tag EndEvents#tag Events SubtitlerButton	#tag Event		Sub Action()		  createSubtitlerFile		End Sub	#tag EndEvent#tag EndEvents#tag Events DocumentSelector1	#tag Event		Sub Change()		  convert		End Sub	#tag EndEvent	#tag Event		Sub openevent()		  me.includetemplates = true		  		End Sub	#tag EndEvent#tag EndEvents