#tag ModuleProtected Module UniqueID	#tag Method, Flags = &h21		Private Function getuidcustom() As string		  dim i,j,k,l,m,n as integer		  dim result as string		  		  i = rnd		  i = rnd*2000000000		  j = rnd*2000000000		  k = rnd*2000000000		  l= rnd*2000000000		  m = rnd*2000000000		  n = rnd*200000000		  		  result = right("00000000"+hex(i),8) + "-"+right("00000000"+hex(j),4) + "-" +_		  right("00000000"+hex(k),4) + "-"+right("00000000"+hex(l),4) + "-"+_		  right("000000000000"+hex(m),8)  +right("00000000"+hex(j),4)		  		  return result		  		  		End Function	#tag EndMethod	#tag Method, Flags = &h21		Private Function getuidgen() As string		  dim sh as shell		  dim s as string		  sh = new shell		  sh.execute("uuidgen")		  s = replacelineEndings(sh.result,"")		  if len(s) < len("2809C92E-ED2C-4F4A-B613-DD05C464A173") then		    return getuidcustom		  else		    return s		  end		  		End Function	#tag EndMethod	#tag Method, Flags = &h1		Protected Function GetUniqueID() As string		  dim result as string		  if targetcarbon then		    result = getuidgen		  else		    result = getuidcustom		  end		  		  return Lowercase(result)		End Function	#tag EndMethod	#tag ViewBehavior		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Module#tag EndModule