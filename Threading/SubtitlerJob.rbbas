#tag ClassProtected Class SubtitlerJob	#tag Method, Flags = &h0		Sub DoJob()		  		  dim m as main		  dim f as FolderItem		  		  TitleListConverterWindow.Show		  		  TitleListConverterWindow.ImportFileFormatMenu.Settext importformat		  TitleListConverterWindow.TextEncodingMenu.Settext importtextencoding		  TitleListConverterWindow.FPSmenu.Settext importframerate		  TitleListConverterWindow.importpath = importpath		  		  		  f = GetFolderItem(importpath,folderitem.PathTypeShell)		  TitleListConverterWindow.ImportTitlelist(f)		  TitleListConverterWindow.Convert		  TitleListConverterWindow.CreateSubtitlerFile		  m = TitleListConverterWindow.lastmain		  m.Titlelist.text = m.Titlelist.text + " "   // force build all titles hack 		  		  TitleListConverterWindow.close		  		  		  		  ExportWindow.Show		  ExportWindow.ListFormatMenu.Settext exportformat		  ExportWindow.TextEncodingMenu.settext exporttextencoding		  ExportWindow.LineEndingMenu.Settext exportlineending		  ExportWindow.DocumentSelector1.SetDocument m		  		  		  ExportWindow.Preview (not app.reg.site)		  f = GetFolderItem(exportpath,folderitem.PathTypeShell)		  ExportWindow.Export(f)		  		  ExportWindow.close		  m.CloseAnyway		  		  		  		  		  		  		  		  		  		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub OpenJobFile(f as folderitem)		  dim dict as Dictionary		  dict = new dictionary		  if not dict.loadxml(f) then		    app.consolelog "subtitlerjob.openjobfile xml error"		    return		  end		  		  call dict.getboolean("applyoffset",applyoffset)		  call dict.getstring("exportformat",exportformat)		  call dict.getstring("exportlineending",exportlineending)		  call dict.getstring("exportpath",exportpath)		  call dict.getstring("exporttextencoding",exporttextencoding)		  call dict.getstring("importformat",importformat)		  call dict.getstring("importframerate",importframerate)		  call dict.getstring("importpath",importpath)		  call dict.getstring("importtextencoding",importtextencoding)		  call dict.getstring("offset",offset)		  call dict.getboolean("tapeoffset",tapeoffset)		  		  // relative paths		  if left(importpath,1) <> "/" then		    importpath = f.Parent.ShellPath + "/" + importpath		  end		  		  if left(exportpath,1) <> "/" then		    exportpath = f.Parent.ShellPath + "/" + exportpath		  end		  		  		End Sub	#tag EndMethod	#tag Property, Flags = &h0		applyoffset As boolean	#tag EndProperty	#tag Property, Flags = &h0		exportformat As string	#tag EndProperty	#tag Property, Flags = &h0		exportlineending As string	#tag EndProperty	#tag Property, Flags = &h0		exportpath As string	#tag EndProperty	#tag Property, Flags = &h0		exporttextencoding As string	#tag EndProperty	#tag Property, Flags = &h0		importformat As string	#tag EndProperty	#tag Property, Flags = &h0		importframerate As string	#tag EndProperty	#tag Property, Flags = &h0		importpath As string	#tag EndProperty	#tag Property, Flags = &h0		importtextencoding As string	#tag EndProperty	#tag Property, Flags = &h0		offset As string	#tag EndProperty	#tag Property, Flags = &h0		tapeoffset As boolean	#tag EndProperty	#tag ViewBehavior		#tag ViewProperty			Name="applyoffset"			Group="Behavior"			InitialValue="0"			Type="boolean"		#tag EndViewProperty		#tag ViewProperty			Name="exportformat"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="exportlineending"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="exportpath"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="exporttextencoding"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="importformat"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="importframerate"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="importpath"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="importtextencoding"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="offset"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="tapeoffset"			Group="Behavior"			InitialValue="0"			Type="boolean"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass